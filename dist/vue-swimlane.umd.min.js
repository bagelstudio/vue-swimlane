!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(t=t||self).VueSwimlane=n()}(this,function(){"use strict";var t={name:"VueSwimlane",props:{words:{type:Array,default:function(){return[]},required:!0},rows:{type:Number,default:1},scale:{type:Number,default:1},transitionDuration:{type:Number,default:1e3},transitionDelay:{type:Number,default:500},transition:{type:String,default:"ease-out"},circular:{type:Boolean,default:!1},continous:{type:Boolean,default:!1},pauseOnHover:{type:Boolean,default:!0}},data:function(){return{listTop:0,isPaused:!1,isMovingBackwards:!1}},computed:{listCount:function(){return this.words.length},fontSize:function(){return 16*this.scale},itemHeight:function(){return 1.5*this.fontSize},listHeight:function(){return this.itemHeight*this.listCount},listParentHeight:function(){return this.itemHeight*this.rows},itemStyle:function(){return"font-size: ".concat(this.fontSize,"px;\n              height: ").concat(this.itemHeight,"px;")},listStyle:function(){return"height: ".concat(this.listHeight,"px;\n              transition-delay: ").concat(this.transitionDelay,"ms;\n              transition-duration: ").concat(this.transitionDuration,"ms;\n              transition-timing-function: ").concat(this.transition,";\n              will-change: transform;\n              transform: translateY(").concat(this.listTop,"px)")},listParentStyle:function(){return"height: ".concat(this.listParentHeight,"px;")}},mounted:function(){setTimeout(this.updateState,this.transitionDelay)},methods:{updateState:function(){var t=this;this.listCount<=this.rows||this.isPaused||(this.isMovingBackwards?this.listTop+=this.itemHeight:this.listTop-=this.itemHeight,this.circular?(this.listTop<this.rows*this.itemHeight-this.listHeight&&(this.listTop+=this.itemHeight*(this.rows-1),this.isMovingBackwards=!this.isMovingBackwards),this.listTop>-this.itemHeight&&(this.listTop=0,this.isMovingBackwards=!this.isMovingBackwards)):this.continous||this.listTop<this.rows*this.itemHeight-this.listHeight&&(this.listTop=0),this.timeOutId=window.setTimeout(function(){t.updateState()},this.transitionDuration+this.transitionDelay))},toggleAnimation:function(){this.pauseOnHover&&(this.isPaused=!this.isPaused,this.isPaused?clearTimeout(this.timeOutId):this.updateState())}}};var n=function(t,n,e,i,s,o,a,r,l,u){"boolean"!=typeof a&&(l=r,r=a,a=!1);var h,d="function"==typeof e?e.options:e;if(t&&t.render&&(d.render=t.render,d.staticRenderFns=t.staticRenderFns,d._compiled=!0,s&&(d.functional=!0)),i&&(d._scopeId=i),o?(h=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),n&&n.call(this,l(t)),t&&t._registeredComponents&&t._registeredComponents.add(o)},d._ssrRegister=h):n&&(h=a?function(){n.call(this,u(this.$root.$options.shadowRoot))}:function(t){n.call(this,r(t))}),h)if(d.functional){var m=d.render;d.render=function(t,n){return h.call(n),m(t,n)}}else{var c=d.beforeCreate;d.beforeCreate=c?[].concat(c,h):[h]}return e},e="undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());var i=document.head||document.getElementsByTagName("head")[0],s={};var o=function(t){return function(t,n){return function(t,n){var o=e?n.media||"default":t,a=s[o]||(s[o]={ids:new Set,styles:[]});if(!a.ids.has(t)){a.ids.add(t);var r=n.source;if(n.map&&(r+="\n/*# sourceURL="+n.map.sources[0]+" */",r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n.map))))+" */"),a.element||(a.element=document.createElement("style"),a.element.type="text/css",n.media&&a.element.setAttribute("media",n.media),i.appendChild(a.element)),"styleSheet"in a.element)a.styles.push(r),a.element.styleSheet.cssText=a.styles.filter(Boolean).join("\n");else{var l=a.ids.size-1,u=document.createTextNode(r),h=a.element.childNodes;h[l]&&a.element.removeChild(h[l]),h.length?a.element.insertBefore(u,h[l]):a.element.appendChild(u)}}}(t,n)}};const a=t;var r=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"vue-swimlane",style:t.listParentStyle,on:{mouseenter:t.toggleAnimation,mouseleave:t.toggleAnimation}},[e("ul",{style:t.listStyle},t._l(t.words,function(n,i){return e("li",{key:i,style:t.itemStyle,domProps:{innerHTML:t._s(n)}})}),0)])};r._withStripped=!0;var l=n({render:r,staticRenderFns:[]},function(t){t&&t("data-v-5036ff00_0",{source:"\n.vue-swimlane {\n  overflow: hidden !important;\n}\n.vue-swimlane ul {\n  list-style: none !important;\n  overflow: hidden !important;\n  transition-property: transform !important;\n}\n.vue-swimlane ul li {\n  text-align: center;\n  padding: 0 !important;\n  margin: 0 !important;\n}\n",map:{version:3,sources:["D:\\current\\vue-swimlane\\src\\component\\vue-swimlane.vue"],names:[],mappings:";AA2KA;EACA,2BAAA;AACA;AAEA;EACA,2BAAA;EACA,2BAAA;EACA,yCAAA;AACA;AAEA;EACA,kBAAA;EACA,qBAAA;EACA,oBAAA;AACA",file:"vue-swimlane.vue",sourcesContent:['<template>\n  <div\n    :style="listParentStyle"\n    class="vue-swimlane"\n    @mouseenter="toggleAnimation"\n    @mouseleave="toggleAnimation"\n  >\n    <ul :style="listStyle">\n      <li\n        v-for="(word, index) in words"\n        :key="index"\n        :style="itemStyle"\n        v-html="word"\n      />\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \'VueSwimlane\',\n\n  props: {\n    words: {\n      type: Array,\n      default: () => {\n        return []\n      },\n      required: true,\n    },\n    rows: {\n      type: Number,\n      default: 1,\n    },\n    scale: {\n      type: Number,\n      default: 1,\n    },\n    transitionDuration: {\n      type: Number,\n      default: 1000,\n    },\n    transitionDelay: {\n      type: Number,\n      default: 500,\n    },\n    transition: {\n      type: String,\n      default: \'ease-out\',\n    },\n    circular: {\n      type: Boolean,\n      default: false,\n    },\n    continous: {\n      type: Boolean,\n      default: false,\n    },\n    pauseOnHover: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data() {\n    return {\n      listTop: 0,\n      isPaused: false,\n      isMovingBackwards: false,\n    }\n  },\n\n  computed: {\n    listCount() {\n      return this.words.length\n    },\n\n    fontSize() {\n      // scale from 16px font size\n      return 16 * this.scale\n    },\n\n    itemHeight() {\n      return this.fontSize * 1.5\n    },\n\n    listHeight() {\n      return this.itemHeight * this.listCount\n    },\n\n    listParentHeight() {\n      return this.itemHeight * this.rows\n    },\n\n    itemStyle() {\n      return `font-size: ${this.fontSize}px;\n              height: ${this.itemHeight}px;`\n    },\n\n    listStyle() {\n      return `height: ${this.listHeight}px;\n              transition-delay: ${this.transitionDelay}ms;\n              transition-duration: ${this.transitionDuration}ms;\n              transition-timing-function: ${this.transition};\n              will-change: transform;\n              transform: translateY(${this.listTop}px)`\n    },\n\n    listParentStyle() {\n      return `height: ${this.listParentHeight}px;`\n    },\n  },\n\n  mounted() {\n    setTimeout(this.updateState, this.transitionDelay)\n  },\n\n  methods: {\n    updateState() {\n      // check if enough keywords or is not paused\n      if (this.listCount <= this.rows) return\n      if (this.isPaused) return\n\n      // update list state\n      if (this.isMovingBackwards) {\n        this.listTop += this.itemHeight\n      } else {\n        this.listTop -= this.itemHeight\n      }\n\n      if (this.circular) {\n        // cricular animation\n        if (this.listTop < this.rows * this.itemHeight - this.listHeight) {\n          this.listTop += this.itemHeight * (this.rows - 1)\n          this.isMovingBackwards = !this.isMovingBackwards\n        }\n\n        if (this.listTop > -this.itemHeight) {\n          this.listTop = 0\n          this.isMovingBackwards = !this.isMovingBackwards\n        }\n      } else if (this.continous) {\n        // continous animation\n      }\n      // one way animation\n      else if (this.listTop < this.rows * this.itemHeight - this.listHeight) {\n        this.listTop = 0\n      }\n\n      // set time out for next update\n      this.timeOutId = window.setTimeout(() => {\n        this.updateState()\n      }, this.transitionDuration + this.transitionDelay)\n    },\n\n    toggleAnimation() {\n      if (this.pauseOnHover) {\n        this.isPaused = !this.isPaused\n\n        if (this.isPaused) {\n          clearTimeout(this.timeOutId)\n        } else {\n          this.updateState()\n        }\n      }\n    },\n  },\n}\n<\/script>\n\n<style>\n.vue-swimlane {\n  overflow: hidden !important;\n}\n\n.vue-swimlane ul {\n  list-style: none !important;\n  overflow: hidden !important;\n  transition-property: transform !important;\n}\n\n.vue-swimlane ul li {\n  text-align: center;\n  padding: 0 !important;\n  margin: 0 !important;\n}\n</style>\n']},media:void 0})},a,void 0,!1,void 0,o,void 0),u={install:function(t){t.component(l.name,l)}};return"undefined"!=typeof window&&window.Vue&&window.Vue.use(u),u});
